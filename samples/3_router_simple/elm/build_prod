#!/bin/bash
#
# Build all the frontend assets to run in production mode
#
# Simon, April 2017

#
# Build the Elm app
#
export ELM_BUILD_PROD=1
yarn clean
if [ "$1" == "nodebug" ]; then
    echo Creating production build without Elm debugger
    export NODE_ENV=production
    debugger=absent
else
    debugger=present
fi
yarn build || exit 1

#
# Copy over this and other assets
#
S=../svr/static
mkdir $S 2>/dev/null
rm -f $S/*
cat > $S/!README <<-EOF
!!
!! Do NOT manually put any files in this directory - they WILL get
!! deleted! Files here are committed to the git repo just so the
!! production server is fully ready to go, not for editing. If you
!! find yourself having to change file permissions, that's a hint
!! you're editing the wrong files.
!!
!! This is populated by running ./build_prod from the elm directory -
!! last run at $(date).
!!
EOF
cp -r static/* $S
cp dist/app.css $S
sed 's:/app.js:/static/app.js:' dist/index.html > $S/index.html
substitutions="s/const dev_mode = true;/const dev_mode = false;/"
if [ "$debugger" == "absent" ]; then
  substitutions="$substitutions; s/const debugger_present = true;/const debugger_present = false;/"
fi
sed "$substitutions" dist/app.js > $S/app.js


chmod 444 $S/*

echo Running elm-analyse...
(elm-analyse | grep -v "INFO: Load ") || echo "If you haven't got elm-analyse, run 'yarn global add elm-analyse'"

